# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@HAVE_CUDA_TRUE@am__append_1 = cuda
@HAVE_OPENGL_TRUE@am__append_2 = opengl
noinst_PROGRAMS = arith$(EXEEXT) arith_encode$(EXEEXT) encode$(EXEEXT) \
	wavelet$(EXEEXT) wavelet_2d$(EXEEXT) phasecorrelation$(EXEEXT) \
	motion$(EXEEXT) quant$(EXEEXT) decode$(EXEEXT) \
	decode_coded_order$(EXEEXT) decode_loop$(EXEEXT) \
	divide$(EXEEXT) global_motion$(EXEEXT) upsample$(EXEEXT) \
	motion2$(EXEEXT) sort$(EXEEXT) filter$(EXEEXT) ssim$(EXEEXT) \
	gaussian$(EXEEXT) fft$(EXEEXT) wavelet_gain$(EXEEXT) \
	wavelet_noise_gain$(EXEEXT) wavelet_gain_curve$(EXEEXT) \
	perceptual_weight$(EXEEXT) perceptual_curves$(EXEEXT) \
	wavelet_noise_2d$(EXEEXT) unpack$(EXEEXT) downsample$(EXEEXT) \
	hist_noise_level$(EXEEXT) taps$(EXEEXT) ramp$(EXEEXT) \
	abi$(EXEEXT) $(am__EXEEXT_1)
@BUILD_BROKEN_TESTS_TRUE@am__append_3 = bits bits2 bits3
subdir = testsuite
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-auto-alt.m4 \
	$(top_srcdir)/m4/as-compiler-flag.m4 \
	$(top_srcdir)/m4/as-host-defines.m4 \
	$(top_srcdir)/m4/as-nano.m4 \
	$(top_srcdir)/m4/ax_create_stdint_h.m4 \
	$(top_srcdir)/m4/gtk-doc.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(buildnoinstdir)"
buildnoinstLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(buildnoinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libschrotest_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libschrotest_la_OBJECTS = common.lo
libschrotest_la_OBJECTS = $(am_libschrotest_la_OBJECTS)
@BUILD_BROKEN_TESTS_TRUE@am__EXEEXT_1 = bits$(EXEEXT) bits2$(EXEEXT) \
@BUILD_BROKEN_TESTS_TRUE@	bits3$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
abi_SOURCES = abi.c
abi_OBJECTS = abi.$(OBJEXT)
abi_LDADD = $(LDADD)
abi_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_arith_OBJECTS = arith.$(OBJEXT)
arith_OBJECTS = $(am_arith_OBJECTS)
arith_LDADD = $(LDADD)
arith_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_arith_encode_OBJECTS = arith_encode.$(OBJEXT)
arith_encode_OBJECTS = $(am_arith_encode_OBJECTS)
arith_encode_LDADD = $(LDADD)
arith_encode_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_bits_OBJECTS = bits.$(OBJEXT)
bits_OBJECTS = $(am_bits_OBJECTS)
bits_LDADD = $(LDADD)
bits_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_bits2_OBJECTS = bits2.$(OBJEXT)
bits2_OBJECTS = $(am_bits2_OBJECTS)
bits2_LDADD = $(LDADD)
bits2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
bits3_SOURCES = bits3.c
bits3_OBJECTS = bits3.$(OBJEXT)
bits3_LDADD = $(LDADD)
bits3_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
decode_SOURCES = decode.c
decode_OBJECTS = decode.$(OBJEXT)
decode_LDADD = $(LDADD)
decode_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
decode_coded_order_SOURCES = decode_coded_order.c
decode_coded_order_OBJECTS = decode_coded_order.$(OBJEXT)
decode_coded_order_LDADD = $(LDADD)
decode_coded_order_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
decode_loop_SOURCES = decode_loop.c
decode_loop_OBJECTS = decode_loop.$(OBJEXT)
decode_loop_LDADD = $(LDADD)
decode_loop_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
divide_SOURCES = divide.c
divide_OBJECTS = divide.$(OBJEXT)
divide_LDADD = $(LDADD)
divide_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
downsample_SOURCES = downsample.c
downsample_OBJECTS = downsample.$(OBJEXT)
downsample_LDADD = $(LDADD)
downsample_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_encode_OBJECTS = encode.$(OBJEXT)
encode_OBJECTS = $(am_encode_OBJECTS)
encode_LDADD = $(LDADD)
encode_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_fft_OBJECTS = fft.$(OBJEXT)
fft_OBJECTS = $(am_fft_OBJECTS)
fft_LDADD = $(LDADD)
fft_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_filter_OBJECTS = filter.$(OBJEXT)
filter_OBJECTS = $(am_filter_OBJECTS)
filter_LDADD = $(LDADD)
filter_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_gaussian_OBJECTS = gaussian.$(OBJEXT)
gaussian_OBJECTS = $(am_gaussian_OBJECTS)
gaussian_LDADD = $(LDADD)
gaussian_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
global_motion_SOURCES = global_motion.c
global_motion_OBJECTS = global_motion.$(OBJEXT)
global_motion_LDADD = $(LDADD)
global_motion_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
hist_noise_level_SOURCES = hist_noise_level.c
hist_noise_level_OBJECTS = hist_noise_level.$(OBJEXT)
hist_noise_level_LDADD = $(LDADD)
hist_noise_level_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_motion_OBJECTS = motion.$(OBJEXT)
motion_OBJECTS = $(am_motion_OBJECTS)
motion_LDADD = $(LDADD)
motion_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_motion2_OBJECTS = motion2.$(OBJEXT)
motion2_OBJECTS = $(am_motion2_OBJECTS)
motion2_LDADD = $(LDADD)
motion2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_perceptual_curves_OBJECTS = perceptual_curves.$(OBJEXT)
perceptual_curves_OBJECTS = $(am_perceptual_curves_OBJECTS)
perceptual_curves_LDADD = $(LDADD)
perceptual_curves_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_perceptual_weight_OBJECTS = perceptual_weight.$(OBJEXT)
perceptual_weight_OBJECTS = $(am_perceptual_weight_OBJECTS)
perceptual_weight_LDADD = $(LDADD)
perceptual_weight_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_phasecorrelation_OBJECTS = phasecorrelation.$(OBJEXT)
phasecorrelation_OBJECTS = $(am_phasecorrelation_OBJECTS)
phasecorrelation_LDADD = $(LDADD)
phasecorrelation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_quant_OBJECTS = quant.$(OBJEXT)
quant_OBJECTS = $(am_quant_OBJECTS)
quant_LDADD = $(LDADD)
quant_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
ramp_SOURCES = ramp.c
ramp_OBJECTS = ramp.$(OBJEXT)
ramp_LDADD = $(LDADD)
ramp_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_sort_OBJECTS = sort.$(OBJEXT)
sort_OBJECTS = $(am_sort_OBJECTS)
sort_LDADD = $(LDADD)
sort_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_ssim_OBJECTS = ssim.$(OBJEXT)
ssim_OBJECTS = $(am_ssim_OBJECTS)
ssim_LDADD = $(LDADD)
ssim_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
taps_SOURCES = taps.c
taps_OBJECTS = taps.$(OBJEXT)
taps_LDADD = $(LDADD)
taps_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
unpack_SOURCES = unpack.c
unpack_OBJECTS = unpack.$(OBJEXT)
unpack_LDADD = $(LDADD)
unpack_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
upsample_SOURCES = upsample.c
upsample_OBJECTS = upsample.$(OBJEXT)
upsample_LDADD = $(LDADD)
upsample_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_wavelet_OBJECTS = wavelet.$(OBJEXT)
wavelet_OBJECTS = $(am_wavelet_OBJECTS)
wavelet_LDADD = $(LDADD)
wavelet_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_wavelet_2d_OBJECTS = wavelet_2d.$(OBJEXT)
wavelet_2d_OBJECTS = $(am_wavelet_2d_OBJECTS)
wavelet_2d_LDADD = $(LDADD)
wavelet_2d_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libschrotest.la
am_wavelet_gain_OBJECTS = wavelet_gain.$(OBJEXT)
wavelet_gain_OBJECTS = $(am_wavelet_gain_OBJECTS)
wavelet_gain_LDADD = $(LDADD)
wavelet_gain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_wavelet_gain_curve_OBJECTS = wavelet_gain_curve.$(OBJEXT)
wavelet_gain_curve_OBJECTS = $(am_wavelet_gain_curve_OBJECTS)
wavelet_gain_curve_LDADD = $(LDADD)
wavelet_gain_curve_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_wavelet_noise_2d_OBJECTS = wavelet_noise_2d.$(OBJEXT)
wavelet_noise_2d_OBJECTS = $(am_wavelet_noise_2d_OBJECTS)
wavelet_noise_2d_LDADD = $(LDADD)
wavelet_noise_2d_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
am_wavelet_noise_gain_OBJECTS = wavelet_noise_gain.$(OBJEXT)
wavelet_noise_gain_OBJECTS = $(am_wavelet_noise_gain_OBJECTS)
wavelet_noise_gain_LDADD = $(LDADD)
wavelet_noise_gain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libschrotest.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libschrotest_la_SOURCES) abi.c $(arith_SOURCES) \
	$(arith_encode_SOURCES) $(bits_SOURCES) $(bits2_SOURCES) \
	bits3.c decode.c decode_coded_order.c decode_loop.c divide.c \
	downsample.c $(encode_SOURCES) $(fft_SOURCES) \
	$(filter_SOURCES) $(gaussian_SOURCES) global_motion.c \
	hist_noise_level.c $(motion_SOURCES) $(motion2_SOURCES) \
	$(perceptual_curves_SOURCES) $(perceptual_weight_SOURCES) \
	$(phasecorrelation_SOURCES) $(quant_SOURCES) ramp.c \
	$(sort_SOURCES) $(ssim_SOURCES) taps.c unpack.c upsample.c \
	$(wavelet_SOURCES) $(wavelet_2d_SOURCES) \
	$(wavelet_gain_SOURCES) $(wavelet_gain_curve_SOURCES) \
	$(wavelet_noise_2d_SOURCES) $(wavelet_noise_gain_SOURCES)
DIST_SOURCES = $(libschrotest_la_SOURCES) abi.c $(arith_SOURCES) \
	$(arith_encode_SOURCES) $(bits_SOURCES) $(bits2_SOURCES) \
	bits3.c decode.c decode_coded_order.c decode_loop.c divide.c \
	downsample.c $(encode_SOURCES) $(fft_SOURCES) \
	$(filter_SOURCES) $(gaussian_SOURCES) global_motion.c \
	hist_noise_level.c $(motion_SOURCES) $(motion2_SOURCES) \
	$(perceptual_curves_SOURCES) $(perceptual_weight_SOURCES) \
	$(phasecorrelation_SOURCES) $(quant_SOURCES) ramp.c \
	$(sort_SOURCES) $(ssim_SOURCES) taps.c unpack.c upsample.c \
	$(wavelet_SOURCES) $(wavelet_2d_SOURCES) \
	$(wavelet_gain_SOURCES) $(wavelet_gain_curve_SOURCES) \
	$(wavelet_noise_2d_SOURCES) $(wavelet_noise_gain_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = . perf coder installation prototype streams tables2 \
	dirac manual cache cuda opengl
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_BROKEN_TESTS_FALSE = @BUILD_BROKEN_TESTS_FALSE@
BUILD_BROKEN_TESTS_TRUE = @BUILD_BROKEN_TESTS_TRUE@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LIBS = @CUDA_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_GTK_DOC_FALSE = @ENABLE_GTK_DOC_FALSE@
ENABLE_GTK_DOC_TRUE = @ENABLE_GTK_DOC_TRUE@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
GST_ALL_LDFLAGS = @GST_ALL_LDFLAGS@
GST_CFLAGS = @GST_CFLAGS@
GST_LIBS = @GST_LIBS@
GST_PLUGIN_LDFLAGS = @GST_PLUGIN_LDFLAGS@
GTHREAD_CFLAGS = @GTHREAD_CFLAGS@
GTHREAD_LIBS = @GTHREAD_LIBS@
GTKDOC_CHECK = @GTKDOC_CHECK@
GTK_DOC_USE_LIBTOOL_FALSE = @GTK_DOC_USE_LIBTOOL_FALSE@
GTK_DOC_USE_LIBTOOL_TRUE = @GTK_DOC_USE_LIBTOOL_TRUE@
HAVE_AMD64_FALSE = @HAVE_AMD64_FALSE@
HAVE_AMD64_TRUE = @HAVE_AMD64_TRUE@
HAVE_ARM_FALSE = @HAVE_ARM_FALSE@
HAVE_ARM_TRUE = @HAVE_ARM_TRUE@
HAVE_CUDA_FALSE = @HAVE_CUDA_FALSE@
HAVE_CUDA_TRUE = @HAVE_CUDA_TRUE@
HAVE_GST_FALSE = @HAVE_GST_FALSE@
HAVE_GST_TRUE = @HAVE_GST_TRUE@
HAVE_I386_FALSE = @HAVE_I386_FALSE@
HAVE_I386_TRUE = @HAVE_I386_TRUE@
HAVE_OPENGL_FALSE = @HAVE_OPENGL_FALSE@
HAVE_OPENGL_TRUE = @HAVE_OPENGL_TRUE@
HAVE_ORC_FALSE = @HAVE_ORC_FALSE@
HAVE_ORC_TRUE = @HAVE_ORC_TRUE@
HAVE_POWERPC_FALSE = @HAVE_POWERPC_FALSE@
HAVE_POWERPC_TRUE = @HAVE_POWERPC_TRUE@
HTML_DIR = @HTML_DIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBM = @LIBM@
LIBOBJS = @LIBOBJS@
LIBOIL_CFLAGS = @LIBOIL_CFLAGS@
LIBOIL_LIBS = @LIBOIL_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
NANO = @NANO@
NMEDIT = @NMEDIT@
NVCC = @NVCC@
NVCCFLAGS = @NVCCFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENGL_CFLAGS = @OPENGL_CFLAGS@
OPENGL_LIBS = @OPENGL_LIBS@
ORC_CFLAGS = @ORC_CFLAGS@
ORC_LIBS = @ORC_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SCHRO_CFLAGS = @SCHRO_CFLAGS@
SCHRO_LIBS = @SCHRO_LIBS@
SCHRO_LIBVERSION = @SCHRO_LIBVERSION@
SCHRO_MAJORMINOR = @SCHRO_MAJORMINOR@
SCHRO_PKG_DEPS = @SCHRO_PKG_DEPS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
THREAD_IMPL = @THREAD_IMPL@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfigdir = @pkgconfigdir@
plugindir = @plugindir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
SUBDIRS = . perf coder installation prototype streams tables2 dirac \
	manual cache $(am__append_1) $(am__append_2)
buildnoinstdir = $(libdir)
buildnoinst_LTLIBRARIES = libschrotest.la
noinst_HEADERS = common.h
TESTS = arith encode wavelet wavelet_2d unpack downsample
AM_CFLAGS = $(SCHRO_CFLAGS) $(ERROR_CFLAGS) $(LIBOIL_CFLAGS) \
	    -DSCHRO_ENABLE_UNSTABLE_API

LDADD = $(SCHRO_LIBS) $(LIBM) libschrotest.la
libschrotest_la_SOURCES = common.c
libschrotest_la_LIBADD = $(LIBM)

#arith_CFLAGS = $(SCHRO_CFLAGS)
#arith_LDADD = $(SCHRO_LIBS)
arith_SOURCES = arith.c

#arith_encode_CFLAGS = $(SCHRO_CFLAGS)
#arith_encode_LDADD = $(SCHRO_LIBS)
arith_encode_SOURCES = arith_encode.c

# arith_decode_CFLAGS = $(SCHRO_CFLAGS)
# arith_decode_LDADD = $(SCHRO_LIBS)
# arith_decode_SOURCES = arith_decode.c

# arith_fixup_shift_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
# arith_fixup_shift_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
# arith_fixup_shift_SOURCES = arith_fixup_shift.c

#bits_CFLAGS = $(SCHRO_CFLAGS)
#bits_LDADD = $(SCHRO_LIBS)
bits_SOURCES = bits.c

#bits2_CFLAGS = $(SCHRO_CFLAGS)
#bits2_LDADD = $(SCHRO_LIBS)
bits2_SOURCES = bits2.c

#codes_CFLAGS = $(SCHRO_CFLAGS)
#codes_LDADD = $(SCHRO_LIBS)
#codes_SOURCES = codes.c

#encode_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#encode_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
encode_SOURCES = encode.c

#encode_big_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#encode_big_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
#encode_big_SOURCES = encode_big.c

#wavelet_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#wavelet_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
wavelet_SOURCES = wavelet.c
wavelet_gain_SOURCES = wavelet_gain.c
wavelet_noise_gain_SOURCES = wavelet_noise_gain.c
wavelet_gain_curve_SOURCES = wavelet_gain_curve.c

#wavelet2_CFLAGS = $(SCHRO_CFLAGS)
#wavelet2_LDADD = $(SCHRO_LIBS)
#wavelet2_SOURCES = wavelet2.c

#wavelet_2d_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#wavelet_2d_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
wavelet_2d_SOURCES = wavelet_2d.c
wavelet_noise_2d_SOURCES = wavelet_noise_2d.c

#phasecorrelation_CFLAGS = $(SCHRO_CFLAGS)
#phasecorrelation_LDADD = $(SCHRO_LIBS) -lm
phasecorrelation_SOURCES = phasecorrelation.c

#motion_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#motion_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
motion_SOURCES = motion.c

#motion2_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#motion2_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
motion2_SOURCES = motion2.c

#quant_CFLAGS = 
#quant_LDADD = -lm
quant_SOURCES = quant.c

#sort_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#sort_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
sort_SOURCES = sort.c

#filter_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#filter_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
filter_SOURCES = filter.c

#ssim_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#ssim_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
ssim_SOURCES = ssim.c

#gaussian_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#gaussian_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
gaussian_SOURCES = gaussian.c

#fft_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#fft_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
fft_SOURCES = fft.c
perceptual_weight_SOURCES = perceptual_weight.c

#perceptual_curves_CFLAGS = $(SCHRO_CFLAGS) $(LIBOIL_CFLAGS)
#perceptual_curves_LDADD = $(SCHRO_LIBS) $(LIBOIL_LIBS)
perceptual_curves_SOURCES = perceptual_curves.c
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  testsuite/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  testsuite/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

uninstall-buildnoinstLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(buildnoinst_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(buildnoinstdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(buildnoinstdir)/$$p"; \
	done

clean-buildnoinstLTLIBRARIES:
	-test -z "$(buildnoinst_LTLIBRARIES)" || rm -f $(buildnoinst_LTLIBRARIES)
	@list='$(buildnoinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libschrotest.la: $(libschrotest_la_OBJECTS) $(libschrotest_la_DEPENDENCIES) 
	$(LINK) -rpath $(buildnoinstdir) $(libschrotest_la_LDFLAGS) $(libschrotest_la_OBJECTS) $(libschrotest_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
abi$(EXEEXT): $(abi_OBJECTS) $(abi_DEPENDENCIES) 
	@rm -f abi$(EXEEXT)
	$(LINK) $(abi_LDFLAGS) $(abi_OBJECTS) $(abi_LDADD) $(LIBS)
arith$(EXEEXT): $(arith_OBJECTS) $(arith_DEPENDENCIES) 
	@rm -f arith$(EXEEXT)
	$(LINK) $(arith_LDFLAGS) $(arith_OBJECTS) $(arith_LDADD) $(LIBS)
arith_encode$(EXEEXT): $(arith_encode_OBJECTS) $(arith_encode_DEPENDENCIES) 
	@rm -f arith_encode$(EXEEXT)
	$(LINK) $(arith_encode_LDFLAGS) $(arith_encode_OBJECTS) $(arith_encode_LDADD) $(LIBS)
bits$(EXEEXT): $(bits_OBJECTS) $(bits_DEPENDENCIES) 
	@rm -f bits$(EXEEXT)
	$(LINK) $(bits_LDFLAGS) $(bits_OBJECTS) $(bits_LDADD) $(LIBS)
bits2$(EXEEXT): $(bits2_OBJECTS) $(bits2_DEPENDENCIES) 
	@rm -f bits2$(EXEEXT)
	$(LINK) $(bits2_LDFLAGS) $(bits2_OBJECTS) $(bits2_LDADD) $(LIBS)
bits3$(EXEEXT): $(bits3_OBJECTS) $(bits3_DEPENDENCIES) 
	@rm -f bits3$(EXEEXT)
	$(LINK) $(bits3_LDFLAGS) $(bits3_OBJECTS) $(bits3_LDADD) $(LIBS)
decode$(EXEEXT): $(decode_OBJECTS) $(decode_DEPENDENCIES) 
	@rm -f decode$(EXEEXT)
	$(LINK) $(decode_LDFLAGS) $(decode_OBJECTS) $(decode_LDADD) $(LIBS)
decode_coded_order$(EXEEXT): $(decode_coded_order_OBJECTS) $(decode_coded_order_DEPENDENCIES) 
	@rm -f decode_coded_order$(EXEEXT)
	$(LINK) $(decode_coded_order_LDFLAGS) $(decode_coded_order_OBJECTS) $(decode_coded_order_LDADD) $(LIBS)
decode_loop$(EXEEXT): $(decode_loop_OBJECTS) $(decode_loop_DEPENDENCIES) 
	@rm -f decode_loop$(EXEEXT)
	$(LINK) $(decode_loop_LDFLAGS) $(decode_loop_OBJECTS) $(decode_loop_LDADD) $(LIBS)
divide$(EXEEXT): $(divide_OBJECTS) $(divide_DEPENDENCIES) 
	@rm -f divide$(EXEEXT)
	$(LINK) $(divide_LDFLAGS) $(divide_OBJECTS) $(divide_LDADD) $(LIBS)
downsample$(EXEEXT): $(downsample_OBJECTS) $(downsample_DEPENDENCIES) 
	@rm -f downsample$(EXEEXT)
	$(LINK) $(downsample_LDFLAGS) $(downsample_OBJECTS) $(downsample_LDADD) $(LIBS)
encode$(EXEEXT): $(encode_OBJECTS) $(encode_DEPENDENCIES) 
	@rm -f encode$(EXEEXT)
	$(LINK) $(encode_LDFLAGS) $(encode_OBJECTS) $(encode_LDADD) $(LIBS)
fft$(EXEEXT): $(fft_OBJECTS) $(fft_DEPENDENCIES) 
	@rm -f fft$(EXEEXT)
	$(LINK) $(fft_LDFLAGS) $(fft_OBJECTS) $(fft_LDADD) $(LIBS)
filter$(EXEEXT): $(filter_OBJECTS) $(filter_DEPENDENCIES) 
	@rm -f filter$(EXEEXT)
	$(LINK) $(filter_LDFLAGS) $(filter_OBJECTS) $(filter_LDADD) $(LIBS)
gaussian$(EXEEXT): $(gaussian_OBJECTS) $(gaussian_DEPENDENCIES) 
	@rm -f gaussian$(EXEEXT)
	$(LINK) $(gaussian_LDFLAGS) $(gaussian_OBJECTS) $(gaussian_LDADD) $(LIBS)
global_motion$(EXEEXT): $(global_motion_OBJECTS) $(global_motion_DEPENDENCIES) 
	@rm -f global_motion$(EXEEXT)
	$(LINK) $(global_motion_LDFLAGS) $(global_motion_OBJECTS) $(global_motion_LDADD) $(LIBS)
hist_noise_level$(EXEEXT): $(hist_noise_level_OBJECTS) $(hist_noise_level_DEPENDENCIES) 
	@rm -f hist_noise_level$(EXEEXT)
	$(LINK) $(hist_noise_level_LDFLAGS) $(hist_noise_level_OBJECTS) $(hist_noise_level_LDADD) $(LIBS)
motion$(EXEEXT): $(motion_OBJECTS) $(motion_DEPENDENCIES) 
	@rm -f motion$(EXEEXT)
	$(LINK) $(motion_LDFLAGS) $(motion_OBJECTS) $(motion_LDADD) $(LIBS)
motion2$(EXEEXT): $(motion2_OBJECTS) $(motion2_DEPENDENCIES) 
	@rm -f motion2$(EXEEXT)
	$(LINK) $(motion2_LDFLAGS) $(motion2_OBJECTS) $(motion2_LDADD) $(LIBS)
perceptual_curves$(EXEEXT): $(perceptual_curves_OBJECTS) $(perceptual_curves_DEPENDENCIES) 
	@rm -f perceptual_curves$(EXEEXT)
	$(LINK) $(perceptual_curves_LDFLAGS) $(perceptual_curves_OBJECTS) $(perceptual_curves_LDADD) $(LIBS)
perceptual_weight$(EXEEXT): $(perceptual_weight_OBJECTS) $(perceptual_weight_DEPENDENCIES) 
	@rm -f perceptual_weight$(EXEEXT)
	$(LINK) $(perceptual_weight_LDFLAGS) $(perceptual_weight_OBJECTS) $(perceptual_weight_LDADD) $(LIBS)
phasecorrelation$(EXEEXT): $(phasecorrelation_OBJECTS) $(phasecorrelation_DEPENDENCIES) 
	@rm -f phasecorrelation$(EXEEXT)
	$(LINK) $(phasecorrelation_LDFLAGS) $(phasecorrelation_OBJECTS) $(phasecorrelation_LDADD) $(LIBS)
quant$(EXEEXT): $(quant_OBJECTS) $(quant_DEPENDENCIES) 
	@rm -f quant$(EXEEXT)
	$(LINK) $(quant_LDFLAGS) $(quant_OBJECTS) $(quant_LDADD) $(LIBS)
ramp$(EXEEXT): $(ramp_OBJECTS) $(ramp_DEPENDENCIES) 
	@rm -f ramp$(EXEEXT)
	$(LINK) $(ramp_LDFLAGS) $(ramp_OBJECTS) $(ramp_LDADD) $(LIBS)
sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES) 
	@rm -f sort$(EXEEXT)
	$(LINK) $(sort_LDFLAGS) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)
ssim$(EXEEXT): $(ssim_OBJECTS) $(ssim_DEPENDENCIES) 
	@rm -f ssim$(EXEEXT)
	$(LINK) $(ssim_LDFLAGS) $(ssim_OBJECTS) $(ssim_LDADD) $(LIBS)
taps$(EXEEXT): $(taps_OBJECTS) $(taps_DEPENDENCIES) 
	@rm -f taps$(EXEEXT)
	$(LINK) $(taps_LDFLAGS) $(taps_OBJECTS) $(taps_LDADD) $(LIBS)
unpack$(EXEEXT): $(unpack_OBJECTS) $(unpack_DEPENDENCIES) 
	@rm -f unpack$(EXEEXT)
	$(LINK) $(unpack_LDFLAGS) $(unpack_OBJECTS) $(unpack_LDADD) $(LIBS)
upsample$(EXEEXT): $(upsample_OBJECTS) $(upsample_DEPENDENCIES) 
	@rm -f upsample$(EXEEXT)
	$(LINK) $(upsample_LDFLAGS) $(upsample_OBJECTS) $(upsample_LDADD) $(LIBS)
wavelet$(EXEEXT): $(wavelet_OBJECTS) $(wavelet_DEPENDENCIES) 
	@rm -f wavelet$(EXEEXT)
	$(LINK) $(wavelet_LDFLAGS) $(wavelet_OBJECTS) $(wavelet_LDADD) $(LIBS)
wavelet_2d$(EXEEXT): $(wavelet_2d_OBJECTS) $(wavelet_2d_DEPENDENCIES) 
	@rm -f wavelet_2d$(EXEEXT)
	$(LINK) $(wavelet_2d_LDFLAGS) $(wavelet_2d_OBJECTS) $(wavelet_2d_LDADD) $(LIBS)
wavelet_gain$(EXEEXT): $(wavelet_gain_OBJECTS) $(wavelet_gain_DEPENDENCIES) 
	@rm -f wavelet_gain$(EXEEXT)
	$(LINK) $(wavelet_gain_LDFLAGS) $(wavelet_gain_OBJECTS) $(wavelet_gain_LDADD) $(LIBS)
wavelet_gain_curve$(EXEEXT): $(wavelet_gain_curve_OBJECTS) $(wavelet_gain_curve_DEPENDENCIES) 
	@rm -f wavelet_gain_curve$(EXEEXT)
	$(LINK) $(wavelet_gain_curve_LDFLAGS) $(wavelet_gain_curve_OBJECTS) $(wavelet_gain_curve_LDADD) $(LIBS)
wavelet_noise_2d$(EXEEXT): $(wavelet_noise_2d_OBJECTS) $(wavelet_noise_2d_DEPENDENCIES) 
	@rm -f wavelet_noise_2d$(EXEEXT)
	$(LINK) $(wavelet_noise_2d_LDFLAGS) $(wavelet_noise_2d_OBJECTS) $(wavelet_noise_2d_LDADD) $(LIBS)
wavelet_noise_gain$(EXEEXT): $(wavelet_noise_gain_OBJECTS) $(wavelet_noise_gain_DEPENDENCIES) 
	@rm -f wavelet_noise_gain$(EXEEXT)
	$(LINK) $(wavelet_noise_gain_LDFLAGS) $(wavelet_noise_gain_OBJECTS) $(wavelet_noise_gain_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/abi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arith.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arith_encode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bits2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bits3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/decode_coded_order.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/decode_loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/divide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/downsample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gaussian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global_motion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hist_noise_level.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/motion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/motion2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perceptual_curves.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perceptual_weight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phasecorrelation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ramp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/upsample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet_2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet_gain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet_gain_curve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet_noise_2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavelet_noise_gain.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(buildnoinstdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-buildnoinstLTLIBRARIES clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-buildnoinstLTLIBRARIES

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-buildnoinstLTLIBRARIES uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-TESTS \
	check-am clean clean-buildnoinstLTLIBRARIES clean-generic \
	clean-libtool clean-noinstPROGRAMS clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-buildnoinstLTLIBRARIES install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-buildnoinstLTLIBRARIES uninstall-info-am


install-buildnoinstLTLIBRARIES:

zzuf_test:
	zzuf -A -s0:10000 -r0.00001 -c -v ./decode test_stream.drc

test-%.drc:
	num=`echo $@ | sed 's/test-\(.*\)\.drc/\1/'`; \
	zzuf -A -s$$num -r0.00001 -c -v cat test_stream.drc >$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
