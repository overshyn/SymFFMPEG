<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="schroedinger-schrodecoder">
<refmeta>
<refentrytitle role="top_of_page" id="schroedinger-schrodecoder.top_of_page">schrodecoder</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>SCHROEDINGER Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>schrodecoder</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="schroedinger-schrodecoder.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="SchroDecoder">SchroDecoder</link>;
<link linkend="SchroDecoder">SchroDecoder</link>*       <link linkend="schro-decoder-new">schro_decoder_new</link>                   (void);
<link linkend="void">void</link>                <link linkend="schro-decoder-free">schro_decoder_free</link>                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="void">void</link>                <link linkend="schro-decoder-reset">schro_decoder_reset</link>                 (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="SchroVideoFormat">SchroVideoFormat</link>*   <link linkend="schro-decoder-get-video-format">schro_decoder_get_video_format</link>      (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="void">void</link>                <link linkend="schro-decoder-add-output-picture">schro_decoder_add_output_picture</link>    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroFrame">SchroFrame</link> *frame);
<link linkend="int">int</link>                 <link linkend="schro-decoder-push-ready">schro_decoder_push_ready</link>            (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="int">int</link>                 <link linkend="schro-decoder-push">schro_decoder_push</link>                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroBuffer">SchroBuffer</link> *buffer);
<link linkend="int">int</link>                 <link linkend="schro-decoder-push-end-of-stream">schro_decoder_push_end_of_stream</link>    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="SchroFrame">SchroFrame</link>*         <link linkend="schro-decoder-pull">schro_decoder_pull</link>                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="int">int</link>                 <link linkend="schro-decoder-wait">schro_decoder_wait</link>                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="void">void</link>                <link linkend="schro-decoder-set-earliest-frame">schro_decoder_set_earliest_frame</link>    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroPictureNumber">SchroPictureNumber</link> earliest_frame);
<link linkend="void">void</link>                <link linkend="schro-decoder-set-skip-ratio">schro_decoder_set_skip_ratio</link>        (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="double">double</link> ratio);
<link linkend="SchroPictureNumber">SchroPictureNumber</link>  <link linkend="schro-decoder-get-picture-number">schro_decoder_get_picture_number</link>    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);

<link linkend="void">void</link>                <link linkend="schro-decoder-decode-parse-header">schro_decoder_decode_parse_header</link>   (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-transform-data">schro_decoder_decode_transform_data</link> (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-lowdelay-transform-data">schro_decoder_decode_lowdelay_transform_data</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-subband-dc-predict">schro_decoder_subband_dc_predict</link>    (<link linkend="SchroFrameData">SchroFrameData</link> *fd);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-block-data">schro_decoder_decode_block_data</link>     (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-macroblock">schro_decoder_decode_macroblock</link>     (<link linkend="SchroPicture">SchroPicture</link> *picture,
                                                         <link linkend="SchroArith">SchroArith</link> **arith,
                                                         <link linkend="SchroUnpack">SchroUnpack</link> *unpack,
                                                         <link linkend="int">int</link> i,
                                                         <link linkend="int">int</link> j);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-picture">schro_decoder_decode_picture</link>        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-decode-prediction-unit">schro_decoder_decode_prediction_unit</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture,
                                                         <link linkend="SchroArith">SchroArith</link> **arith,
                                                         <link linkend="SchroUnpack">SchroUnpack</link> *unpack,
                                                         <link linkend="SchroMotionVector">SchroMotionVector</link> *motion_vectors,
                                                         <link linkend="int">int</link> x,
                                                         <link linkend="int">int</link> y);
<link linkend="void">void</link>                <link linkend="schro-decoder-init-subband-frame-data-interleaved">schro_decoder_init_subband_frame_data_interleaved</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="int">int</link>                 <link linkend="schro-decoder-iterate-picture">schro_decoder_iterate_picture</link>       (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-block-data">schro_decoder_parse_block_data</link>      (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-lowdelay-transform-data">schro_decoder_parse_lowdelay_transform_data</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-picture">schro_decoder_parse_picture</link>         (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-picture-header">schro_decoder_parse_picture_header</link>  (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-picture-prediction-parameters">schro_decoder_parse_picture_prediction_parameters</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-transform-data">schro_decoder_parse_transform_data</link>  (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-parse-transform-parameters">schro_decoder_parse_transform_parameters</link>
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-check-references">schro_decoder_x_check_references</link>    (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-combine">schro_decoder_x_combine</link>             (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-decode-motion">schro_decoder_x_decode_motion</link>       (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-decode-residual">schro_decoder_x_decode_residual</link>     (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-render-motion">schro_decoder_x_render_motion</link>       (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-upsample">schro_decoder_x_upsample</link>            (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-decoder-x-wavelet-transform">schro_decoder_x_wavelet_transform</link>   (<link linkend="SchroPicture">SchroPicture</link> *picture);
                    <link linkend="SchroPicture">SchroPicture</link>;
<link linkend="SchroPicture">SchroPicture</link>*       <link linkend="schro-picture-new">schro_picture_new</link>                   (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);
<link linkend="SchroPicture">SchroPicture</link>*       <link linkend="schro-picture-ref">schro_picture_ref</link>                   (<link linkend="SchroPicture">SchroPicture</link> *picture);
<link linkend="void">void</link>                <link linkend="schro-picture-unref">schro_picture_unref</link>                 (<link linkend="SchroPicture">SchroPicture</link> *picture);
</synopsis>
</refsynopsisdiv>









<refsect1 id="schroedinger-schrodecoder.description" role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="schroedinger-schrodecoder.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SchroDecoder" role="struct">
<title>SchroDecoder</title>
<indexterm zone="SchroDecoder"><primary>SchroDecoder</primary></indexterm><programlisting>typedef struct {
} SchroDecoder;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="schro-decoder-new" role="function">
<title>schro_decoder_new ()</title>
<indexterm zone="schro-decoder-new"><primary>schro_decoder_new</primary></indexterm><programlisting><link linkend="SchroDecoder">SchroDecoder</link>*       schro_decoder_new                   (void);</programlisting>
<para>
Creates a new decoder object.  The decoder object should be freed
using @<link linkend="schro-decoder-free"><function>schro_decoder_free()</function></link> when it is no longer needed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new decoder object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-free" role="function">
<title>schro_decoder_free ()</title>
<indexterm zone="schro-decoder-free"><primary>schro_decoder_free</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_free                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Frees a decoder object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> decoder object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-reset" role="function">
<title>schro_decoder_reset ()</title>
<indexterm zone="schro-decoder-reset"><primary>schro_decoder_reset</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_reset                 (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Resets the internal state of the decoder.  This function should be
called after a discontinuity of the stream, for example, as the
result of a seek.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-get-video-format" role="function">
<title>schro_decoder_get_video_format ()</title>
<indexterm zone="schro-decoder-get-video-format"><primary>schro_decoder_get_video_format</primary></indexterm><programlisting><link linkend="SchroVideoFormat">SchroVideoFormat</link>*   schro_decoder_get_video_format      (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Returns a structure containing information on the video format being
decoded by the decoder.  This structure should be freed using <link linkend="free"><function>free()</function></link>
when it is no longer needed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a video format structure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-add-output-picture" role="function">
<title>schro_decoder_add_output_picture ()</title>
<indexterm zone="schro-decoder-add-output-picture"><primary>schro_decoder_add_output_picture</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_add_output_picture    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroFrame">SchroFrame</link> *frame);</programlisting>
<para>
Adds a frame provided by the application to the picture queue.
Frames in the picture queue will be used for decoding images, and
are eventually returned to the application by <link linkend="schro-decoder-pull"><function>schro_decoder_pull()</function></link>.
</para>
<para>
The caller loses its reference to <parameter>frame</parameter> after calling this
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>frame</parameter>&nbsp;:</term>
<listitem><simpara> the frame to add to the picture queue
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-push-ready" role="function">
<title>schro_decoder_push_ready ()</title>
<indexterm zone="schro-decoder-push-ready"><primary>schro_decoder_push_ready</primary></indexterm><programlisting><link linkend="int">int</link>                 schro_decoder_push_ready            (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
This function is used by the application to determine if it should push
more data to the decoder.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the decoder is ready for more data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-push" role="function">
<title>schro_decoder_push ()</title>
<indexterm zone="schro-decoder-push"><primary>schro_decoder_push</primary></indexterm><programlisting><link linkend="int">int</link>                 schro_decoder_push                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroBuffer">SchroBuffer</link> *buffer);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-push-end-of-stream" role="function">
<title>schro_decoder_push_end_of_stream ()</title>
<indexterm zone="schro-decoder-push-end-of-stream"><primary>schro_decoder_push_end_of_stream</primary></indexterm><programlisting><link linkend="int">int</link>                 schro_decoder_push_end_of_stream    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-pull" role="function">
<title>schro_decoder_pull ()</title>
<indexterm zone="schro-decoder-pull"><primary>schro_decoder_pull</primary></indexterm><programlisting><link linkend="SchroFrame">SchroFrame</link>*         schro_decoder_pull                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Removes the next picture from the picture queue and returns a frame
containing the image.
</para>
<para>
The application provides the frames that pictures are decoded into,
and the same frames are returned from this function.  However, the
order of frames returned may be different than the order that the
application provides the frames to the decoder.
</para>
<para>
An exception to this is that skipped frames are indicated by a
frame having a height and width equal to 0.  This frame is created
using @<link linkend="schro-frame-new"><function>schro_frame_new()</function></link>, and is not one of the frames provided by
the application.
</para>
<para>
Frames should be freed using @<link linkend="schro-frame-unref"><function>schro_frame_unref()</function></link> when no longer
needed.  The frame must not be reused by the application, since it
may contain a reference frame still in use by the decoder.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the next picture
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-wait" role="function">
<title>schro_decoder_wait ()</title>
<indexterm zone="schro-decoder-wait"><primary>schro_decoder_wait</primary></indexterm><programlisting><link linkend="int">int</link>                 schro_decoder_wait                  (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Waits until the decoder requires the application to do something,
e.g., push more data or remove a frame from the picture queue,
and then returns the decoder status.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> decoder status
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-set-earliest-frame" role="function">
<title>schro_decoder_set_earliest_frame ()</title>
<indexterm zone="schro-decoder-set-earliest-frame"><primary>schro_decoder_set_earliest_frame</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_set_earliest_frame    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="SchroPictureNumber">SchroPictureNumber</link> earliest_frame);</programlisting>
<para>
The application can tell the decoder the earliest frame it is
interested in by calling this function.  Subsequent calls to
<link linkend="schro-decoder-pull"><function>schro_decoder_pull()</function></link> will only return pictures with picture
numbers greater than or equal to this number.  The decoder will
avoid decoding pictures that will not be displayed or used as
reference pictures.
</para>
<para>
This feature can be used for frame-accurate seeking.
</para>
<para>
This function can be called at any time during decoding.  Calling
this function with a picture number less than the current earliest
frame setting is invalid.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>earliest_frame</parameter>&nbsp;:</term>
<listitem><simpara> the earliest frame that the application is interested in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-set-skip-ratio" role="function">
<title>schro_decoder_set_skip_ratio ()</title>
<indexterm zone="schro-decoder-set-skip-ratio"><primary>schro_decoder_set_skip_ratio</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_set_skip_ratio        (<link linkend="SchroDecoder">SchroDecoder</link> *decoder,
                                                         <link linkend="double">double</link> ratio);</programlisting>
<para>
Sets the skip ratio of the decoder.  The skip ratio is used by the
decoder to skip decoding of some pictures.  Reference pictures are
always decoded.
</para>
<para>
A picture is skipped when the running average of the proportion of
pictures skipped is less than the skip ratio.  Reference frames are
always decoded and contribute to the running average.  Thus, the
actual ratio of skipped pictures may be larger than the requested
skip ratio.
</para>
<para>
The decoder indicates a skipped picture in the pictures returned
by @<link linkend="schro-decoder-pull"><function>schro_decoder_pull()</function></link> by a frame that has a width and height of
0.
</para>
<para>
The default skip ratio is 1.0, indicating that all pictures should
be decoded.  A skip ratio of 0.0 indicates that no pictures should
be decoded, although as mentioned above, some pictures will be
decoded anyway.  Values outside the range of 0.0 to 1.0 are quietly
clamped to that range.
</para>
<para>
This function may be called at any time during decoding.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ratio</parameter>&nbsp;:</term>
<listitem><simpara> skip ratio.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-get-picture-number" role="function">
<title>schro_decoder_get_picture_number ()</title>
<indexterm zone="schro-decoder-get-picture-number"><primary>schro_decoder_get_picture_number</primary></indexterm><programlisting><link linkend="SchroPictureNumber">SchroPictureNumber</link>  schro_decoder_get_picture_number    (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Returns the picture number of the next picture that will be returned
by @<link linkend="schro-decoder-pull"><function>schro_decoder_pull()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a picture number
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-parse-header" role="function">
<title>schro_decoder_decode_parse_header ()</title>
<indexterm zone="schro-decoder-decode-parse-header"><primary>schro_decoder_decode_parse_header</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_parse_header   (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-transform-data" role="function">
<title>schro_decoder_decode_transform_data ()</title>
<indexterm zone="schro-decoder-decode-transform-data"><primary>schro_decoder_decode_transform_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_transform_data (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-lowdelay-transform-data" role="function">
<title>schro_decoder_decode_lowdelay_transform_data ()</title>
<indexterm zone="schro-decoder-decode-lowdelay-transform-data"><primary>schro_decoder_decode_lowdelay_transform_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_lowdelay_transform_data
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-subband-dc-predict" role="function">
<title>schro_decoder_subband_dc_predict ()</title>
<indexterm zone="schro-decoder-subband-dc-predict"><primary>schro_decoder_subband_dc_predict</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_subband_dc_predict    (<link linkend="SchroFrameData">SchroFrameData</link> *fd);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>fd</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-block-data" role="function">
<title>schro_decoder_decode_block_data ()</title>
<indexterm zone="schro-decoder-decode-block-data"><primary>schro_decoder_decode_block_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_block_data     (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-macroblock" role="function">
<title>schro_decoder_decode_macroblock ()</title>
<indexterm zone="schro-decoder-decode-macroblock"><primary>schro_decoder_decode_macroblock</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_macroblock     (<link linkend="SchroPicture">SchroPicture</link> *picture,
                                                         <link linkend="SchroArith">SchroArith</link> **arith,
                                                         <link linkend="SchroUnpack">SchroUnpack</link> *unpack,
                                                         <link linkend="int">int</link> i,
                                                         <link linkend="int">int</link> j);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arith</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unpack</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>j</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-picture" role="function">
<title>schro_decoder_decode_picture ()</title>
<indexterm zone="schro-decoder-decode-picture"><primary>schro_decoder_decode_picture</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_picture        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-decode-prediction-unit" role="function">
<title>schro_decoder_decode_prediction_unit ()</title>
<indexterm zone="schro-decoder-decode-prediction-unit"><primary>schro_decoder_decode_prediction_unit</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_decode_prediction_unit
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture,
                                                         <link linkend="SchroArith">SchroArith</link> **arith,
                                                         <link linkend="SchroUnpack">SchroUnpack</link> *unpack,
                                                         <link linkend="SchroMotionVector">SchroMotionVector</link> *motion_vectors,
                                                         <link linkend="int">int</link> x,
                                                         <link linkend="int">int</link> y);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arith</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unpack</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>motion_vectors</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-init-subband-frame-data-interleaved" role="function">
<title>schro_decoder_init_subband_frame_data_interleaved ()</title>
<indexterm zone="schro-decoder-init-subband-frame-data-interleaved"><primary>schro_decoder_init_subband_frame_data_interleaved</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_init_subband_frame_data_interleaved
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-iterate-picture" role="function">
<title>schro_decoder_iterate_picture ()</title>
<indexterm zone="schro-decoder-iterate-picture"><primary>schro_decoder_iterate_picture</primary></indexterm><programlisting><link linkend="int">int</link>                 schro_decoder_iterate_picture       (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-block-data" role="function">
<title>schro_decoder_parse_block_data ()</title>
<indexterm zone="schro-decoder-parse-block-data"><primary>schro_decoder_parse_block_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_block_data      (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-lowdelay-transform-data" role="function">
<title>schro_decoder_parse_lowdelay_transform_data ()</title>
<indexterm zone="schro-decoder-parse-lowdelay-transform-data"><primary>schro_decoder_parse_lowdelay_transform_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_lowdelay_transform_data
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-picture" role="function">
<title>schro_decoder_parse_picture ()</title>
<indexterm zone="schro-decoder-parse-picture"><primary>schro_decoder_parse_picture</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_picture         (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-picture-header" role="function">
<title>schro_decoder_parse_picture_header ()</title>
<indexterm zone="schro-decoder-parse-picture-header"><primary>schro_decoder_parse_picture_header</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_picture_header  (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-picture-prediction-parameters" role="function">
<title>schro_decoder_parse_picture_prediction_parameters ()</title>
<indexterm zone="schro-decoder-parse-picture-prediction-parameters"><primary>schro_decoder_parse_picture_prediction_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_picture_prediction_parameters
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-transform-data" role="function">
<title>schro_decoder_parse_transform_data ()</title>
<indexterm zone="schro-decoder-parse-transform-data"><primary>schro_decoder_parse_transform_data</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_transform_data  (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-parse-transform-parameters" role="function">
<title>schro_decoder_parse_transform_parameters ()</title>
<indexterm zone="schro-decoder-parse-transform-parameters"><primary>schro_decoder_parse_transform_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_parse_transform_parameters
                                                        (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-check-references" role="function">
<title>schro_decoder_x_check_references ()</title>
<indexterm zone="schro-decoder-x-check-references"><primary>schro_decoder_x_check_references</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_check_references    (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-combine" role="function">
<title>schro_decoder_x_combine ()</title>
<indexterm zone="schro-decoder-x-combine"><primary>schro_decoder_x_combine</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_combine             (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-decode-motion" role="function">
<title>schro_decoder_x_decode_motion ()</title>
<indexterm zone="schro-decoder-x-decode-motion"><primary>schro_decoder_x_decode_motion</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_decode_motion       (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-decode-residual" role="function">
<title>schro_decoder_x_decode_residual ()</title>
<indexterm zone="schro-decoder-x-decode-residual"><primary>schro_decoder_x_decode_residual</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_decode_residual     (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-render-motion" role="function">
<title>schro_decoder_x_render_motion ()</title>
<indexterm zone="schro-decoder-x-render-motion"><primary>schro_decoder_x_render_motion</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_render_motion       (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-upsample" role="function">
<title>schro_decoder_x_upsample ()</title>
<indexterm zone="schro-decoder-x-upsample"><primary>schro_decoder_x_upsample</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_upsample            (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-decoder-x-wavelet-transform" role="function">
<title>schro_decoder_x_wavelet_transform ()</title>
<indexterm zone="schro-decoder-x-wavelet-transform"><primary>schro_decoder_x_wavelet_transform</primary></indexterm><programlisting><link linkend="void">void</link>                schro_decoder_x_wavelet_transform   (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SchroPicture" role="struct">
<title>SchroPicture</title>
<indexterm zone="SchroPicture"><primary>SchroPicture</primary></indexterm><programlisting>typedef struct {
  int refcount;

  SchroDecoder *decoder;

  unsigned int state;
  unsigned int needed_state;
  unsigned int working;
  int busy;
  int skip;
  int error;

  SchroBuffer *input_buffer;
  SchroParams params;
  SchroPictureNumber picture_number;
  SchroPictureNumber reference1;
  SchroPictureNumber reference2;
  SchroPictureNumber retired_picture_number;
  SchroPicture *ref0;
  SchroPicture *ref1;
  SchroFrame *planar_output_frame;

  int is_ref;

  int16_t *tmpbuf;

  int zero_residual;

  SchroFrame *transform_frame;
  SchroFrame *frame;
  SchroFrame *mc_tmp_frame;
  SchroMotion *motion;
  SchroFrame *output_picture;
  SchroUpsampledFrame *upsampled_frame;

  int subband_length[3][SCHRO_LIMIT_SUBBANDS];
  int subband_quant_index[3][SCHRO_LIMIT_SUBBANDS];
  SchroBuffer *subband_buffer[3][SCHRO_LIMIT_SUBBANDS];
  SchroFrameData subband_data[3][SCHRO_LIMIT_SUBBANDS];

  SchroBuffer *motion_buffers[9];

  SchroBuffer *lowdelay_buffer;

  int has_md5;
  uint8_t md5_checksum[32];
};
#endif

enum {
  SCHRO_DECODER_OK,
  SCHRO_DECODER_ERROR,
  SCHRO_DECODER_EOS,
  SCHRO_DECODER_FIRST_ACCESS_UNIT,
  SCHRO_DECODER_NEED_BITS,
  SCHRO_DECODER_NEED_FRAME,
  SCHRO_DECODER_WAIT,
  SCHRO_DECODER_STALLED
} SchroPicture;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="schro-picture-new" role="function">
<title>schro_picture_new ()</title>
<indexterm zone="schro-picture-new"><primary>schro_picture_new</primary></indexterm><programlisting><link linkend="SchroPicture">SchroPicture</link>*       schro_picture_new                   (<link linkend="SchroDecoder">SchroDecoder</link> *decoder);</programlisting>
<para>
Creates a new picture for <parameter>decoder</parameter>.
</para>
<para>
Internal API.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>decoder</parameter>&nbsp;:</term>
<listitem><simpara> a decoder object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new picture
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-picture-ref" role="function">
<title>schro_picture_ref ()</title>
<indexterm zone="schro-picture-ref"><primary>schro_picture_ref</primary></indexterm><programlisting><link linkend="SchroPicture">SchroPicture</link>*       schro_picture_ref                   (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-picture-unref" role="function">
<title>schro_picture_unref ()</title>
<indexterm zone="schro-picture-unref"><primary>schro_picture_unref</primary></indexterm><programlisting><link linkend="void">void</link>                schro_picture_unref                 (<link linkend="SchroPicture">SchroPicture</link> *picture);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>picture</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
