<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"
>
<refentry id="liboil-liboilfuncs-conv">
<refmeta>
<refentrytitle role="top_of_page" id="liboil-liboilfuncs-conv.top_of_page">Type Conversion</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBOIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Type Conversion</refname>
<refpurpose>Type conversion</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="liboil-liboilfuncs-conv.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="oil-clipconv8x8-u8-s16">oil_clipconv8x8_u8_s16</link>              (<link linkend="uint8-t">uint8_t</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s16-f32">oil_clipconv_s16_f32</link>                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s16-f64">oil_clipconv_s16_f64</link>                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s16-s32">oil_clipconv_s16_s32</link>                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s16-u16">oil_clipconv_s16_u16</link>                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s16-u32">oil_clipconv_s16_u32</link>                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s32-f32">oil_clipconv_s32_f32</link>                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s32-f64">oil_clipconv_s32_f64</link>                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s32-u32">oil_clipconv_s32_u32</link>                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-f32">oil_clipconv_s8_f32</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-f64">oil_clipconv_s8_f64</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-s16">oil_clipconv_s8_s16</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-s32">oil_clipconv_s8_s32</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-u16">oil_clipconv_s8_u16</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-u32">oil_clipconv_s8_u32</link>                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-s8-u8">oil_clipconv_s8_u8</link>                  (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u16-f32">oil_clipconv_u16_f32</link>                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u16-f64">oil_clipconv_u16_f64</link>                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u16-s16">oil_clipconv_u16_s16</link>                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u16-s32">oil_clipconv_u16_s32</link>                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u16-u32">oil_clipconv_u16_u32</link>                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u32-f32">oil_clipconv_u32_f32</link>                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u32-f64">oil_clipconv_u32_f64</link>                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u32-s32">oil_clipconv_u32_s32</link>                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-f32">oil_clipconv_u8_f32</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-f64">oil_clipconv_u8_f64</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-s16">oil_clipconv_u8_s16</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-s32">oil_clipconv_u8_s32</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-s8">oil_clipconv_u8_s8</link>                  (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-u16">oil_clipconv_u8_u16</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-clipconv-u8-u32">oil_clipconv_u8_u32</link>                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv8x8-f64-s16">oil_conv8x8_f64_s16</link>                 (<link linkend="double">double</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);
<link linkend="void">void</link>                <link linkend="oil-conv8x8-s16-f64">oil_conv8x8_s16_f64</link>                 (<link linkend="int16-t">int16_t</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-f64">oil_conv_f32_f64</link>                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-s16">oil_conv_f32_s16</link>                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-s32">oil_conv_f32_s32</link>                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-s8">oil_conv_f32_s8</link>                     (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-u16">oil_conv_f32_u16</link>                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-u32">oil_conv_f32_u32</link>                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f32-u8">oil_conv_f32_u8</link>                     (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-f32">oil_conv_f64_f32</link>                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-s16">oil_conv_f64_s16</link>                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-s32">oil_conv_f64_s32</link>                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-s8">oil_conv_f64_s8</link>                     (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-u16">oil_conv_f64_u16</link>                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-u32">oil_conv_f64_u32</link>                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-f64-u8">oil_conv_f64_u8</link>                     (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-f32">oil_conv_s16_f32</link>                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-f64">oil_conv_s16_f64</link>                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-s32">oil_conv_s16_s32</link>                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-s8">oil_conv_s16_s8</link>                     (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-u16">oil_conv_s16_u16</link>                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-u32">oil_conv_s16_u32</link>                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s16-u8">oil_conv_s16_u8</link>                     (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-f32">oil_conv_s32_f32</link>                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-f64">oil_conv_s32_f64</link>                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-s16">oil_conv_s32_s16</link>                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-s8">oil_conv_s32_s8</link>                     (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-u16">oil_conv_s32_u16</link>                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-u32">oil_conv_s32_u32</link>                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s32-u8">oil_conv_s32_u8</link>                     (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-f32">oil_conv_s8_f32</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-f64">oil_conv_s8_f64</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-s16">oil_conv_s8_s16</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-s32">oil_conv_s8_s32</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-u16">oil_conv_s8_u16</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-u32">oil_conv_s8_u32</link>                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-s8-u8">oil_conv_s8_u8</link>                      (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-f32">oil_conv_u16_f32</link>                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-f64">oil_conv_u16_f64</link>                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-s16">oil_conv_u16_s16</link>                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-s32">oil_conv_u16_s32</link>                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-s8">oil_conv_u16_s8</link>                     (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-u32">oil_conv_u16_u32</link>                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u16-u8">oil_conv_u16_u8</link>                     (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-f32">oil_conv_u32_f32</link>                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-f64">oil_conv_u32_f64</link>                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-s16">oil_conv_u32_s16</link>                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-s32">oil_conv_u32_s32</link>                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-s8">oil_conv_u32_s8</link>                     (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-u16">oil_conv_u32_u16</link>                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u32-u8">oil_conv_u32_u8</link>                     (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-f32">oil_conv_u8_f32</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-f64">oil_conv_u8_f64</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-s16">oil_conv_u8_s16</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-s32">oil_conv_u8_s32</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-s8">oil_conv_u8_s8</link>                      (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-u16">oil_conv_u8_u16</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-conv-u8-u32">oil_conv_u8_u32</link>                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-s16">oil_scaleconv_f32_s16</link>               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-s32">oil_scaleconv_f32_s32</link>               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-s8">oil_scaleconv_f32_s8</link>                (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-u16">oil_scaleconv_f32_u16</link>               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-u32">oil_scaleconv_f32_u32</link>               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f32-u8">oil_scaleconv_f32_u8</link>                (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-s16">oil_scaleconv_f64_s16</link>               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-s32">oil_scaleconv_f64_s32</link>               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-s8">oil_scaleconv_f64_s8</link>                (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-u16">oil_scaleconv_f64_u16</link>               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-u32">oil_scaleconv_f64_u32</link>               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-f64-u8">oil_scaleconv_f64_u8</link>                (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s16-f32">oil_scaleconv_s16_f32</link>               (<link linkend="int16-t">int16_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s16-f64">oil_scaleconv_s16_f64</link>               (<link linkend="int16-t">int16_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s32-f32">oil_scaleconv_s32_f32</link>               (<link linkend="int32-t">int32_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s32-f64">oil_scaleconv_s32_f64</link>               (<link linkend="int32-t">int32_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s8-f32">oil_scaleconv_s8_f32</link>                (<link linkend="int8-t">int8_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-s8-f64">oil_scaleconv_s8_f64</link>                (<link linkend="int8-t">int8_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u16-f32">oil_scaleconv_u16_f32</link>               (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u16-f64">oil_scaleconv_u16_f64</link>               (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u32-f32">oil_scaleconv_u32_f32</link>               (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u32-f64">oil_scaleconv_u32_f64</link>               (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u8-f32">oil_scaleconv_u8_f32</link>                (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
<link linkend="void">void</link>                <link linkend="oil-scaleconv-u8-f64">oil_scaleconv_u8_f64</link>                (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);
</synopsis>
</refsynopsisdiv>









<refsect1 id="liboil-liboilfuncs-conv.description" role="desc">
<title role="desc.title">Description</title>
<para>
The functions in this section perform type conversion.
</para>
<para>
The <i>convert</i> functions convert value from the source type to
the destination type.  Conversion of values outside the
destination range are saturated to the destination range.
</para>
<para>
The <i>scaleconv</i> functions multiply the source values by a
constant factor before converting to the destination type.  Conversion
of values outside the destination range are clamped to the
destination range.
</para>
<para>
Conversion of values from floating point types to integer types
is done using a round-to-nearest policy.  Rounding of half-integers
is undefined and may vary between implementations.</para>
<para>

</para>
</refsect1>

<refsect1 id="liboil-liboilfuncs-conv.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="oil-clipconv8x8-u8-s16" role="function">
<title>oil_clipconv8x8_u8_s16 ()</title>
<indexterm zone="oil-clipconv8x8-u8-s16"><primary>oil_clipconv8x8_u8_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv8x8_u8_s16              (<link linkend="uint8-t">uint8_t</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);</programlisting>
<para>
Converts elements in source array <parameter>s_8x8</parameter> to the destination
type, placing the results in <parameter>d_8x8</parameter>.  Source values outside
the destination range are clipped to the destination range.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>d_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s16-f32" role="function">
<title>oil_clipconv_s16_f32 ()</title>
<indexterm zone="oil-clipconv-s16-f32"><primary>oil_clipconv_s16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s16_f32                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s16-f64" role="function">
<title>oil_clipconv_s16_f64 ()</title>
<indexterm zone="oil-clipconv-s16-f64"><primary>oil_clipconv_s16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s16_f64                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s16-s32" role="function">
<title>oil_clipconv_s16_s32 ()</title>
<indexterm zone="oil-clipconv-s16-s32"><primary>oil_clipconv_s16_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s16_s32                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s16-u16" role="function">
<title>oil_clipconv_s16_u16 ()</title>
<indexterm zone="oil-clipconv-s16-u16"><primary>oil_clipconv_s16_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s16_u16                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s16-u32" role="function">
<title>oil_clipconv_s16_u32 ()</title>
<indexterm zone="oil-clipconv-s16-u32"><primary>oil_clipconv_s16_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s16_u32                (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s32-f32" role="function">
<title>oil_clipconv_s32_f32 ()</title>
<indexterm zone="oil-clipconv-s32-f32"><primary>oil_clipconv_s32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s32_f32                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s32-f64" role="function">
<title>oil_clipconv_s32_f64 ()</title>
<indexterm zone="oil-clipconv-s32-f64"><primary>oil_clipconv_s32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s32_f64                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s32-u32" role="function">
<title>oil_clipconv_s32_u32 ()</title>
<indexterm zone="oil-clipconv-s32-u32"><primary>oil_clipconv_s32_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s32_u32                (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-f32" role="function">
<title>oil_clipconv_s8_f32 ()</title>
<indexterm zone="oil-clipconv-s8-f32"><primary>oil_clipconv_s8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_f32                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-f64" role="function">
<title>oil_clipconv_s8_f64 ()</title>
<indexterm zone="oil-clipconv-s8-f64"><primary>oil_clipconv_s8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_f64                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-s16" role="function">
<title>oil_clipconv_s8_s16 ()</title>
<indexterm zone="oil-clipconv-s8-s16"><primary>oil_clipconv_s8_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_s16                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-s32" role="function">
<title>oil_clipconv_s8_s32 ()</title>
<indexterm zone="oil-clipconv-s8-s32"><primary>oil_clipconv_s8_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_s32                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-u16" role="function">
<title>oil_clipconv_s8_u16 ()</title>
<indexterm zone="oil-clipconv-s8-u16"><primary>oil_clipconv_s8_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_u16                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-u32" role="function">
<title>oil_clipconv_s8_u32 ()</title>
<indexterm zone="oil-clipconv-s8-u32"><primary>oil_clipconv_s8_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_u32                 (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-s8-u8" role="function">
<title>oil_clipconv_s8_u8 ()</title>
<indexterm zone="oil-clipconv-s8-u8"><primary>oil_clipconv_s8_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_s8_u8                  (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u16-f32" role="function">
<title>oil_clipconv_u16_f32 ()</title>
<indexterm zone="oil-clipconv-u16-f32"><primary>oil_clipconv_u16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u16_f32                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u16-f64" role="function">
<title>oil_clipconv_u16_f64 ()</title>
<indexterm zone="oil-clipconv-u16-f64"><primary>oil_clipconv_u16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u16_f64                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u16-s16" role="function">
<title>oil_clipconv_u16_s16 ()</title>
<indexterm zone="oil-clipconv-u16-s16"><primary>oil_clipconv_u16_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u16_s16                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u16-s32" role="function">
<title>oil_clipconv_u16_s32 ()</title>
<indexterm zone="oil-clipconv-u16-s32"><primary>oil_clipconv_u16_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u16_s32                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u16-u32" role="function">
<title>oil_clipconv_u16_u32 ()</title>
<indexterm zone="oil-clipconv-u16-u32"><primary>oil_clipconv_u16_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u16_u32                (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u32-f32" role="function">
<title>oil_clipconv_u32_f32 ()</title>
<indexterm zone="oil-clipconv-u32-f32"><primary>oil_clipconv_u32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u32_f32                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u32-f64" role="function">
<title>oil_clipconv_u32_f64 ()</title>
<indexterm zone="oil-clipconv-u32-f64"><primary>oil_clipconv_u32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u32_f64                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u32-s32" role="function">
<title>oil_clipconv_u32_s32 ()</title>
<indexterm zone="oil-clipconv-u32-s32"><primary>oil_clipconv_u32_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u32_s32                (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-f32" role="function">
<title>oil_clipconv_u8_f32 ()</title>
<indexterm zone="oil-clipconv-u8-f32"><primary>oil_clipconv_u8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_f32                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-f64" role="function">
<title>oil_clipconv_u8_f64 ()</title>
<indexterm zone="oil-clipconv-u8-f64"><primary>oil_clipconv_u8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_f64                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-s16" role="function">
<title>oil_clipconv_u8_s16 ()</title>
<indexterm zone="oil-clipconv-u8-s16"><primary>oil_clipconv_u8_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_s16                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-s32" role="function">
<title>oil_clipconv_u8_s32 ()</title>
<indexterm zone="oil-clipconv-u8-s32"><primary>oil_clipconv_u8_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_s32                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-s8" role="function">
<title>oil_clipconv_u8_s8 ()</title>
<indexterm zone="oil-clipconv-u8-s8"><primary>oil_clipconv_u8_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_s8                  (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-u16" role="function">
<title>oil_clipconv_u8_u16 ()</title>
<indexterm zone="oil-clipconv-u8-u16"><primary>oil_clipconv_u8_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_u16                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-clipconv-u8-u32" role="function">
<title>oil_clipconv_u8_u32 ()</title>
<indexterm zone="oil-clipconv-u8-u32"><primary>oil_clipconv_u8_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_clipconv_u8_u32                 (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are clipped to
the destination range.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv8x8-f64-s16" role="function">
<title>oil_conv8x8_f64_s16 ()</title>
<indexterm zone="oil-conv8x8-f64-s16"><primary>oil_conv8x8_f64_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv8x8_f64_s16                 (<link linkend="double">double</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);</programlisting>
<para>
Converts elements in source array <parameter>s_8x8</parameter> to the destination
type, placing the results in <parameter>d_8x8</parameter>.  The conversion of source
values outside the destination range are undefined and
implementation dependent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>d_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv8x8-s16-f64" role="function">
<title>oil_conv8x8_s16_f64 ()</title>
<indexterm zone="oil-conv8x8-s16-f64"><primary>oil_conv8x8_s16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv8x8_s16_f64                 (<link linkend="int16-t">int16_t</link> *d_8x8,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *s_8x8,
                                                         <link linkend="int">int</link> sstr);</programlisting>
<para>
Converts elements in source array <parameter>s_8x8</parameter> to the destination
type, placing the results in <parameter>d_8x8</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>d_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s_8x8</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-f64" role="function">
<title>oil_conv_f32_f64 ()</title>
<indexterm zone="oil-conv-f32-f64"><primary>oil_conv_f32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_f64                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-s16" role="function">
<title>oil_conv_f32_s16 ()</title>
<indexterm zone="oil-conv-f32-s16"><primary>oil_conv_f32_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_s16                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-s32" role="function">
<title>oil_conv_f32_s32 ()</title>
<indexterm zone="oil-conv-f32-s32"><primary>oil_conv_f32_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_s32                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-s8" role="function">
<title>oil_conv_f32_s8 ()</title>
<indexterm zone="oil-conv-f32-s8"><primary>oil_conv_f32_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_s8                     (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-u16" role="function">
<title>oil_conv_f32_u16 ()</title>
<indexterm zone="oil-conv-f32-u16"><primary>oil_conv_f32_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_u16                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-u32" role="function">
<title>oil_conv_f32_u32 ()</title>
<indexterm zone="oil-conv-f32-u32"><primary>oil_conv_f32_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_u32                    (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f32-u8" role="function">
<title>oil_conv_f32_u8 ()</title>
<indexterm zone="oil-conv-f32-u8"><primary>oil_conv_f32_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f32_u8                     (<link linkend="float">float</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-f32" role="function">
<title>oil_conv_f64_f32 ()</title>
<indexterm zone="oil-conv-f64-f32"><primary>oil_conv_f64_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_f32                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-s16" role="function">
<title>oil_conv_f64_s16 ()</title>
<indexterm zone="oil-conv-f64-s16"><primary>oil_conv_f64_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_s16                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-s32" role="function">
<title>oil_conv_f64_s32 ()</title>
<indexterm zone="oil-conv-f64-s32"><primary>oil_conv_f64_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_s32                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-s8" role="function">
<title>oil_conv_f64_s8 ()</title>
<indexterm zone="oil-conv-f64-s8"><primary>oil_conv_f64_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_s8                     (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-u16" role="function">
<title>oil_conv_f64_u16 ()</title>
<indexterm zone="oil-conv-f64-u16"><primary>oil_conv_f64_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_u16                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-u32" role="function">
<title>oil_conv_f64_u32 ()</title>
<indexterm zone="oil-conv-f64-u32"><primary>oil_conv_f64_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_u32                    (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-f64-u8" role="function">
<title>oil_conv_f64_u8 ()</title>
<indexterm zone="oil-conv-f64-u8"><primary>oil_conv_f64_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_f64_u8                     (<link linkend="double">double</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-f32" role="function">
<title>oil_conv_s16_f32 ()</title>
<indexterm zone="oil-conv-s16-f32"><primary>oil_conv_s16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_f32                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-f64" role="function">
<title>oil_conv_s16_f64 ()</title>
<indexterm zone="oil-conv-s16-f64"><primary>oil_conv_s16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_f64                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-s32" role="function">
<title>oil_conv_s16_s32 ()</title>
<indexterm zone="oil-conv-s16-s32"><primary>oil_conv_s16_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_s32                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-s8" role="function">
<title>oil_conv_s16_s8 ()</title>
<indexterm zone="oil-conv-s16-s8"><primary>oil_conv_s16_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_s8                     (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-u16" role="function">
<title>oil_conv_s16_u16 ()</title>
<indexterm zone="oil-conv-s16-u16"><primary>oil_conv_s16_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_u16                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-u32" role="function">
<title>oil_conv_s16_u32 ()</title>
<indexterm zone="oil-conv-s16-u32"><primary>oil_conv_s16_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_u32                    (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s16-u8" role="function">
<title>oil_conv_s16_u8 ()</title>
<indexterm zone="oil-conv-s16-u8"><primary>oil_conv_s16_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s16_u8                     (<link linkend="int16-t">int16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-f32" role="function">
<title>oil_conv_s32_f32 ()</title>
<indexterm zone="oil-conv-s32-f32"><primary>oil_conv_s32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_f32                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-f64" role="function">
<title>oil_conv_s32_f64 ()</title>
<indexterm zone="oil-conv-s32-f64"><primary>oil_conv_s32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_f64                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-s16" role="function">
<title>oil_conv_s32_s16 ()</title>
<indexterm zone="oil-conv-s32-s16"><primary>oil_conv_s32_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_s16                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-s8" role="function">
<title>oil_conv_s32_s8 ()</title>
<indexterm zone="oil-conv-s32-s8"><primary>oil_conv_s32_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_s8                     (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-u16" role="function">
<title>oil_conv_s32_u16 ()</title>
<indexterm zone="oil-conv-s32-u16"><primary>oil_conv_s32_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_u16                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-u32" role="function">
<title>oil_conv_s32_u32 ()</title>
<indexterm zone="oil-conv-s32-u32"><primary>oil_conv_s32_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_u32                    (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s32-u8" role="function">
<title>oil_conv_s32_u8 ()</title>
<indexterm zone="oil-conv-s32-u8"><primary>oil_conv_s32_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s32_u8                     (<link linkend="int32-t">int32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-f32" role="function">
<title>oil_conv_s8_f32 ()</title>
<indexterm zone="oil-conv-s8-f32"><primary>oil_conv_s8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_f32                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-f64" role="function">
<title>oil_conv_s8_f64 ()</title>
<indexterm zone="oil-conv-s8-f64"><primary>oil_conv_s8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_f64                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-s16" role="function">
<title>oil_conv_s8_s16 ()</title>
<indexterm zone="oil-conv-s8-s16"><primary>oil_conv_s8_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_s16                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-s32" role="function">
<title>oil_conv_s8_s32 ()</title>
<indexterm zone="oil-conv-s8-s32"><primary>oil_conv_s8_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_s32                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-u16" role="function">
<title>oil_conv_s8_u16 ()</title>
<indexterm zone="oil-conv-s8-u16"><primary>oil_conv_s8_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_u16                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-u32" role="function">
<title>oil_conv_s8_u32 ()</title>
<indexterm zone="oil-conv-s8-u32"><primary>oil_conv_s8_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_u32                     (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-s8-u8" role="function">
<title>oil_conv_s8_u8 ()</title>
<indexterm zone="oil-conv-s8-u8"><primary>oil_conv_s8_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_s8_u8                      (<link linkend="int8-t">int8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-f32" role="function">
<title>oil_conv_u16_f32 ()</title>
<indexterm zone="oil-conv-u16-f32"><primary>oil_conv_u16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_f32                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-f64" role="function">
<title>oil_conv_u16_f64 ()</title>
<indexterm zone="oil-conv-u16-f64"><primary>oil_conv_u16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_f64                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-s16" role="function">
<title>oil_conv_u16_s16 ()</title>
<indexterm zone="oil-conv-u16-s16"><primary>oil_conv_u16_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_s16                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-s32" role="function">
<title>oil_conv_u16_s32 ()</title>
<indexterm zone="oil-conv-u16-s32"><primary>oil_conv_u16_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_s32                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-s8" role="function">
<title>oil_conv_u16_s8 ()</title>
<indexterm zone="oil-conv-u16-s8"><primary>oil_conv_u16_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_s8                     (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-u32" role="function">
<title>oil_conv_u16_u32 ()</title>
<indexterm zone="oil-conv-u16-u32"><primary>oil_conv_u16_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_u32                    (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u16-u8" role="function">
<title>oil_conv_u16_u8 ()</title>
<indexterm zone="oil-conv-u16-u8"><primary>oil_conv_u16_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u16_u8                     (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-f32" role="function">
<title>oil_conv_u32_f32 ()</title>
<indexterm zone="oil-conv-u32-f32"><primary>oil_conv_u32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_f32                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-f64" role="function">
<title>oil_conv_u32_f64 ()</title>
<indexterm zone="oil-conv-u32-f64"><primary>oil_conv_u32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_f64                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-s16" role="function">
<title>oil_conv_u32_s16 ()</title>
<indexterm zone="oil-conv-u32-s16"><primary>oil_conv_u32_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_s16                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-s32" role="function">
<title>oil_conv_u32_s32 ()</title>
<indexterm zone="oil-conv-u32-s32"><primary>oil_conv_u32_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_s32                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-s8" role="function">
<title>oil_conv_u32_s8 ()</title>
<indexterm zone="oil-conv-u32-s8"><primary>oil_conv_u32_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_s8                     (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-u16" role="function">
<title>oil_conv_u32_u16 ()</title>
<indexterm zone="oil-conv-u32-u16"><primary>oil_conv_u32_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_u16                    (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u32-u8" role="function">
<title>oil_conv_u32_u8 ()</title>
<indexterm zone="oil-conv-u32-u8"><primary>oil_conv_u32_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u32_u8                     (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-f32" role="function">
<title>oil_conv_u8_f32 ()</title>
<indexterm zone="oil-conv-u8-f32"><primary>oil_conv_u8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_f32                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-f64" role="function">
<title>oil_conv_u8_f64 ()</title>
<indexterm zone="oil-conv-u8-f64"><primary>oil_conv_u8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_f64                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-s16" role="function">
<title>oil_conv_u8_s16 ()</title>
<indexterm zone="oil-conv-u8-s16"><primary>oil_conv_u8_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_s16                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-s32" role="function">
<title>oil_conv_u8_s32 ()</title>
<indexterm zone="oil-conv-u8-s32"><primary>oil_conv_u8_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_s32                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-s8" role="function">
<title>oil_conv_u8_s8 ()</title>
<indexterm zone="oil-conv-u8-s8"><primary>oil_conv_u8_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_s8                      (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-u16" role="function">
<title>oil_conv_u8_u16 ()</title>
<indexterm zone="oil-conv-u8-u16"><primary>oil_conv_u8_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_u16                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-conv-u8-u32" role="function">
<title>oil_conv_u8_u32 ()</title>
<indexterm zone="oil-conv-u8-u32"><primary>oil_conv_u8_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_conv_u8_u32                     (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         <link linkend="int">int</link> dstr,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> sstr,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>
Converts elements in  from the source type
to the destination type and places the result in .
Values outside the destination range are undefined
and implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-s16" role="function">
<title>oil_scaleconv_f32_s16 ()</title>
<indexterm zone="oil-scaleconv-f32-s16"><primary>oil_scaleconv_f32_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_s16               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-s32" role="function">
<title>oil_scaleconv_f32_s32 ()</title>
<indexterm zone="oil-scaleconv-f32-s32"><primary>oil_scaleconv_f32_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_s32               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-s8" role="function">
<title>oil_scaleconv_f32_s8 ()</title>
<indexterm zone="oil-scaleconv-f32-s8"><primary>oil_scaleconv_f32_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_s8                (<link linkend="float">float</link> *dest,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-u16" role="function">
<title>oil_scaleconv_f32_u16 ()</title>
<indexterm zone="oil-scaleconv-f32-u16"><primary>oil_scaleconv_f32_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_u16               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-u32" role="function">
<title>oil_scaleconv_f32_u32 ()</title>
<indexterm zone="oil-scaleconv-f32-u32"><primary>oil_scaleconv_f32_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_u32               (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f32-u8" role="function">
<title>oil_scaleconv_f32_u8 ()</title>
<indexterm zone="oil-scaleconv-f32-u8"><primary>oil_scaleconv_f32_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f32_u8                (<link linkend="float">float</link> *dest,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-s16" role="function">
<title>oil_scaleconv_f64_s16 ()</title>
<indexterm zone="oil-scaleconv-f64-s16"><primary>oil_scaleconv_f64_s16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_s16               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int16-t">int16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-s32" role="function">
<title>oil_scaleconv_f64_s32 ()</title>
<indexterm zone="oil-scaleconv-f64-s32"><primary>oil_scaleconv_f64_s32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_s32               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int32-t">int32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-s8" role="function">
<title>oil_scaleconv_f64_s8 ()</title>
<indexterm zone="oil-scaleconv-f64-s8"><primary>oil_scaleconv_f64_s8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_s8                (<link linkend="double">double</link> *dest,
                                                         const <link linkend="int8-t">int8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-u16" role="function">
<title>oil_scaleconv_f64_u16 ()</title>
<indexterm zone="oil-scaleconv-f64-u16"><primary>oil_scaleconv_f64_u16</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_u16               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint16-t">uint16_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-u32" role="function">
<title>oil_scaleconv_f64_u32 ()</title>
<indexterm zone="oil-scaleconv-f64-u32"><primary>oil_scaleconv_f64_u32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_u32               (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint32-t">uint32_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-f64-u8" role="function">
<title>oil_scaleconv_f64_u8 ()</title>
<indexterm zone="oil-scaleconv-f64-u8"><primary>oil_scaleconv_f64_u8</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_f64_u8                (<link linkend="double">double</link> *dest,
                                                         const <link linkend="uint8-t">uint8_t</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s16-f32" role="function">
<title>oil_scaleconv_s16_f32 ()</title>
<indexterm zone="oil-scaleconv-s16-f32"><primary>oil_scaleconv_s16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s16_f32               (<link linkend="int16-t">int16_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s16-f64" role="function">
<title>oil_scaleconv_s16_f64 ()</title>
<indexterm zone="oil-scaleconv-s16-f64"><primary>oil_scaleconv_s16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s16_f64               (<link linkend="int16-t">int16_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s32-f32" role="function">
<title>oil_scaleconv_s32_f32 ()</title>
<indexterm zone="oil-scaleconv-s32-f32"><primary>oil_scaleconv_s32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s32_f32               (<link linkend="int32-t">int32_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s32-f64" role="function">
<title>oil_scaleconv_s32_f64 ()</title>
<indexterm zone="oil-scaleconv-s32-f64"><primary>oil_scaleconv_s32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s32_f64               (<link linkend="int32-t">int32_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s8-f32" role="function">
<title>oil_scaleconv_s8_f32 ()</title>
<indexterm zone="oil-scaleconv-s8-f32"><primary>oil_scaleconv_s8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s8_f32                (<link linkend="int8-t">int8_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-s8-f64" role="function">
<title>oil_scaleconv_s8_f64 ()</title>
<indexterm zone="oil-scaleconv-s8-f64"><primary>oil_scaleconv_s8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_s8_f64                (<link linkend="int8-t">int8_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u16-f32" role="function">
<title>oil_scaleconv_u16_f32 ()</title>
<indexterm zone="oil-scaleconv-u16-f32"><primary>oil_scaleconv_u16_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u16_f32               (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u16-f64" role="function">
<title>oil_scaleconv_u16_f64 ()</title>
<indexterm zone="oil-scaleconv-u16-f64"><primary>oil_scaleconv_u16_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u16_f64               (<link linkend="uint16-t">uint16_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u32-f32" role="function">
<title>oil_scaleconv_u32_f32 ()</title>
<indexterm zone="oil-scaleconv-u32-f32"><primary>oil_scaleconv_u32_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u32_f32               (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u32-f64" role="function">
<title>oil_scaleconv_u32_f64 ()</title>
<indexterm zone="oil-scaleconv-u32-f64"><primary>oil_scaleconv_u32_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u32_f64               (<link linkend="uint32-t">uint32_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u8-f32" role="function">
<title>oil_scaleconv_u8_f32 ()</title>
<indexterm zone="oil-scaleconv-u8-f32"><primary>oil_scaleconv_u8_f32</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u8_f32                (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         const <link linkend="float">float</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="oil-scaleconv-u8-f64" role="function">
<title>oil_scaleconv_u8_f64 ()</title>
<indexterm zone="oil-scaleconv-u8-f64"><primary>oil_scaleconv_u8_f64</primary></indexterm><programlisting><link linkend="void">void</link>                oil_scaleconv_u8_f64                (<link linkend="uint8-t">uint8_t</link> *dest,
                                                         const <link linkend="double">double</link> *src,
                                                         <link linkend="int">int</link> n,
                                                         const <link linkend="double">double</link> *s2_1,
                                                         const <link linkend="double">double</link> *s3_1);</programlisting>
<para>
Multiplies elements in  by  and adds  and then
converts the result
to the destination type and places the result in .
Values outside the destination range are undefined and
implementation dependent.
See the comments at the beginning of this section.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
 # <parameter>s2_1</parameter>:
 # <parameter>s3_1</parameter>:
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s2_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s3_1</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
